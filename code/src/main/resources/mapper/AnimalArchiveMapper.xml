<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.crud.dao.AnimalArchiveMapper">
  <resultMap id="BaseResultMap" type="com.crud.bean.AnimalArchive">
    <id column="archiveNumber" jdbcType="INTEGER" property="archivenumber" />
    <result column="eartagNumber" jdbcType="INTEGER" property="eartagnumber" />
    <result column="initialDate" jdbcType="TIMESTAMP" property="initialdate" />
    <result column="initialPeople" jdbcType="VARCHAR" property="initialpeople" />
    <result column="responsiblePeople" jdbcType="VARCHAR" property="responsiblepeople" />
    <result column="belongPeople" jdbcType="VARCHAR" property="belongpeople" />
    <result column="archiveDescription" jdbcType="VARCHAR" property="archivedescription" />
    <result column="archiveKey" jdbcType="VARCHAR" property="archivekey" />
    <result column="releaseStatus" jdbcType="VARCHAR" property="releasestatus" />
    <result column="releaseDate" jdbcType="TIMESTAMP" property="releasedate" />
    <result column="price" jdbcType="DECIMAL" property="price" />
    <result column="CanApplyAuthz" jdbcType="VARCHAR" property="canapplyauthz" />
    <result column="AuthzState" jdbcType="VARCHAR" property="authzstate" />
    <result column="CanApplyAdverts" jdbcType="VARCHAR" property="canapplyadverts" />
    <result column="AdvertsState" jdbcType="VARCHAR" property="advertsstate" />
  </resultMap>
  
   <resultMap id="AuthzApplyInfoMap" type="com.crud.bean.AnimalArchive">
   <id column="archiveNumber" jdbcType="INTEGER" property="archivenumber" />
   <result column="archiveKey" jdbcType="VARCHAR" property="archivekey" />
   <result column="belongPeople" jdbcType="VARCHAR" property="belongpeople" />
   <association property = "user"  javaType="com.crud.bean.User">
   		<id column="uid" property="uid"/>
   		<result column="name" property="name"/>
   </association>
  </resultMap>
  
   <resultMap id="RecommendArchiveMap" type="com.crud.bean.AnimalArchive">
   <id column="archiveNumber" jdbcType="INTEGER" property="archivenumber" />
   <result column="archiveKey" jdbcType="VARCHAR" property="archivekey" />
   <result column="archiveDescription" jdbcType="VARCHAR" property="archivedescription" />
   <result column="belongPeople" jdbcType="VARCHAR" property="belongpeople" />
   <association property = "user"  javaType="com.crud.bean.User">
   		<id column="uid" property="uid"/>
   		<result column="name" property="name"/>
   </association>
      <association property = "animalbasic"  javaType="com.crud.bean.AnimalBasicInfo">
   		<id column="BasicNumber" property="basicnumber"/>
   		<result column="AnimalSpecies" property="animalspecies"/>
   		<result column="AnimalDescription" property="animaldescription"/>
   </association>
  </resultMap>
  
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    archiveNumber, eartagNumber, initialDate, initialPeople, responsiblePeople, belongPeople, 
    archiveDescription, archiveKey, releaseStatus, releaseDate, price, CanApplyAuthz, 
    AuthzState, CanApplyAdverts, AdvertsState
  </sql>
  <select id="selectByExample" parameterType="com.crud.bean.AnimalArchiveExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from 2020rg_group9_animalarchive
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from 2020rg_group9_animalarchive
    where archiveNumber = #{archivenumber,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from 2020rg_group9_animalarchive
    where archiveNumber = #{archivenumber,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.crud.bean.AnimalArchiveExample">
    delete from 2020rg_group9_animalarchive
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.crud.bean.AnimalArchive">
    insert into 2020rg_group9_animalarchive (archiveNumber, eartagNumber, initialDate, 
      initialPeople, responsiblePeople, belongPeople, 
      archiveDescription, archiveKey, releaseStatus, 
      releaseDate, price, CanApplyAuthz, 
      AuthzState, CanApplyAdverts, AdvertsState
      )
    values (#{archivenumber,jdbcType=INTEGER}, #{eartagnumber,jdbcType=INTEGER}, #{initialdate,jdbcType=TIMESTAMP}, 
      #{initialpeople,jdbcType=VARCHAR}, #{responsiblepeople,jdbcType=VARCHAR}, #{belongpeople,jdbcType=VARCHAR}, 
      #{archivedescription,jdbcType=VARCHAR}, #{archivekey,jdbcType=VARCHAR}, #{releasestatus,jdbcType=VARCHAR}, 
      #{releasedate,jdbcType=TIMESTAMP}, #{price,jdbcType=DECIMAL}, #{canapplyauthz,jdbcType=VARCHAR}, 
      #{authzstate,jdbcType=VARCHAR}, #{canapplyadverts,jdbcType=VARCHAR}, #{advertsstate,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.crud.bean.AnimalArchive">
    insert into 2020rg_group9_animalarchive
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="archivenumber != null">
        archiveNumber,
      </if>
      <if test="eartagnumber != null">
        eartagNumber,
      </if>
      <if test="initialdate != null">
        initialDate,
      </if>
      <if test="initialpeople != null">
        initialPeople,
      </if>
      <if test="responsiblepeople != null">
        responsiblePeople,
      </if>
      <if test="belongpeople != null">
        belongPeople,
      </if>
      <if test="archivedescription != null">
        archiveDescription,
      </if>
      <if test="archivekey != null">
        archiveKey,
      </if>
      <if test="releasestatus != null">
        releaseStatus,
      </if>
      <if test="releasedate != null">
        releaseDate,
      </if>
      <if test="price != null">
        price,
      </if>
      <if test="canapplyauthz != null">
        CanApplyAuthz,
      </if>
      <if test="authzstate != null">
        AuthzState,
      </if>
      <if test="canapplyadverts != null">
        CanApplyAdverts,
      </if>
      <if test="advertsstate != null">
        AdvertsState,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="archivenumber != null">
        #{archivenumber,jdbcType=INTEGER},
      </if>
      <if test="eartagnumber != null">
        #{eartagnumber,jdbcType=INTEGER},
      </if>
      <if test="initialdate != null">
        #{initialdate,jdbcType=TIMESTAMP},
      </if>
      <if test="initialpeople != null">
        #{initialpeople,jdbcType=VARCHAR},
      </if>
      <if test="responsiblepeople != null">
        #{responsiblepeople,jdbcType=VARCHAR},
      </if>
      <if test="belongpeople != null">
        #{belongpeople,jdbcType=VARCHAR},
      </if>
      <if test="archivedescription != null">
        #{archivedescription,jdbcType=VARCHAR},
      </if>
      <if test="archivekey != null">
        #{archivekey,jdbcType=VARCHAR},
      </if>
      <if test="releasestatus != null">
        #{releasestatus,jdbcType=VARCHAR},
      </if>
      <if test="releasedate != null">
        #{releasedate,jdbcType=TIMESTAMP},
      </if>
      <if test="price != null">
        #{price,jdbcType=DECIMAL},
      </if>
      <if test="canapplyauthz != null">
        #{canapplyauthz,jdbcType=VARCHAR},
      </if>
      <if test="authzstate != null">
        #{authzstate,jdbcType=VARCHAR},
      </if>
      <if test="canapplyadverts != null">
        #{canapplyadverts,jdbcType=VARCHAR},
      </if>
      <if test="advertsstate != null">
        #{advertsstate,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.crud.bean.AnimalArchiveExample" resultType="java.lang.Long">
    select count(*) from 2020rg_group9_animalarchive
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  
    <sql id='AuthzApplyInfo'>
  a.archiveNumber,a.archiveKey,a.belongPeople,u.uid,u.name
  </sql>

  <select id="SelectAuthzInfoByExample" resultMap="AuthzApplyInfoMap">
  	select 
  	<if test="distinct">
  		distinct
  	</if>
  	<include refid="AuthzApplyInfo"/>
  	from 2020rg_group9_animalarchive a
  	left join 2020rg_group9_user u
  	on a.belongPeople = u.uid
  	where CanApplyAuthz =0 and AuthzState="未处理"
  	<if test="_parameter != null">
     	<include refid="Example_Where_Clause" />
  	</if>
  	<if test="orderByClause != null">
    	order by ${orderByClause}
 	 </if>
  </select>
  
    <select id="SelectAdvertInfoByExample" resultMap="AuthzApplyInfoMap">
  	select 
  	<if test="distinct">
  		distinct
  	</if>
  	<include refid="AuthzApplyInfo"/>
  	from 2020rg_group9_animalarchive a
  	left join 2020rg_group9_user u
  	on a.belongPeople = u.uid
  	where CanApplyAuthz=0 and AuthzState="已授权" and canApplyAdverts=0 and AdvertsState="未处理"
  	<if test="_parameter != null">
     	<include refid="Example_Where_Clause" />
  	</if>
  	<if test="orderByClause != null">
    	order by ${orderByClause}
 	 </if>
  </select>
  
   <select id="SelectArchiveCanAuthzWithNameByUid" parameterType="String" resultMap="AuthzApplyInfoMap">
  	select 
  	<include refid="AuthzApplyInfo"/>
  	from 2020rg_group9_animalarchive a
  	left join 2020rg_group9_user u
  	on a.belongPeople = u.uid
  	where CanApplyAuthz=1 and  belongPeople =  #{belongpeople,jdbcType=VARCHAR}
  </select>
  
  <select id="SelectArchiveWithoutProcessWithNameByUid" parameterType="String" resultMap="AuthzApplyInfoMap">
  	select 
  	<include refid="AuthzApplyInfo"/>
  	from 2020rg_group9_animalarchive a
  	left join 2020rg_group9_user u
  	on a.belongPeople = u.uid
  	where CanApplyAuthz=0 and  belongPeople =  #{belongpeople,jdbcType=VARCHAR} and AuthzState="未处理"
  </select>
  
   <select id="SelectArchiveHasAuthzWithNameByUid" parameterType="String" resultMap="AuthzApplyInfoMap">
  	select 
  	<include refid="AuthzApplyInfo"/>
  	from 2020rg_group9_animalarchive a
  	left join 2020rg_group9_user u
  	on a.belongPeople = u.uid
  	where CanApplyAuthz=0 and  belongPeople =  #{belongpeople,jdbcType=VARCHAR} and AuthzState="已授权"
  </select>
  
  <select id="SelectArchiveCanAdvertWithNameByUid" parameterType="String" resultMap="AuthzApplyInfoMap">
  	select 
  	<include refid="AuthzApplyInfo"/>
  	from 2020rg_group9_animalarchive a
  	left join 2020rg_group9_user u
  	on a.belongPeople = u.uid
  	where canApplyAdverts=1 and  belongPeople =  #{belongpeople,jdbcType=VARCHAR} and AuthzState="已授权" and  CanApplyAuthz=0  and AdvertsState="未处理"
  </select>
  
    <select id="SelectArchiveWithoutAdvertProcessWithNameByUid" parameterType="String" resultMap="AuthzApplyInfoMap">
  	select 
  	<include refid="AuthzApplyInfo"/>
  	from 2020rg_group9_animalarchive a
  	left join 2020rg_group9_user u
  	on a.belongPeople = u.uid
  	where CanApplyAdverts=0 and  belongPeople =  #{belongpeople,jdbcType=VARCHAR} and AdvertsState="未处理" and AuthzState="已授权"
  </select>
  
  <select id="SelectArchiveHasAdvertWithNameByUid" parameterType="String" resultMap="AuthzApplyInfoMap">
  	select 
  	<include refid="AuthzApplyInfo"/>
  	from 2020rg_group9_animalarchive a
  	left join 2020rg_group9_user u
  	on a.belongPeople = u.uid
  	where canApplyAdverts=0 and  belongPeople =  #{belongpeople,jdbcType=VARCHAR} and AuthzState="已授权" and  CanApplyAuthz=0 and AdvertsState="已推广"
  </select>
  
    <select id="SelectAllArchiveHasAuthzWithName"  resultMap="AuthzApplyInfoMap">
  	select 
  	<include refid="AuthzApplyInfo"/>
  	from 2020rg_group9_animalarchive a
  	left join 2020rg_group9_user u
  	on a.belongPeople = u.uid
  	where CanApplyAuthz=0 and  AuthzState="已授权"
  </select>
  
    <select id="SelectAllArchiveHasAdvertWithName"  resultMap="AuthzApplyInfoMap">
  	select 
  	<include refid="AuthzApplyInfo"/>
  	from 2020rg_group9_animalarchive a
  	left join 2020rg_group9_user u
  	on a.belongPeople = u.uid
  	where canApplyAdverts=0 and AuthzState="已授权" and  CanApplyAuthz=0 and AdvertsState="已推广"
  </select>
  
  
    <sql id='RecommendArchive'>
  a.archiveNumber,a.archiveDescription,a.archiveKey,a.belongPeople,u.uid,u.name,b.AnimalDescription,b.AnimalSpecies
  </sql>
    <select id="SelectRecommendArchiveWithAnimalBasic"  resultMap="RecommendArchiveMap">
  	select 
  	<include refid="RecommendArchive"/>
  	from 2020rg_group9_animalarchive a
  	left join 2020rg_group9_user u
  	on a.belongPeople = u.uid
  	left join 2020rg_group9_animalbasicinfo b
  	on a.archiveNumber=b.BasicNumber
  	where canApplyAdverts=0 and AuthzState="已授权" and  CanApplyAuthz=0 and AdvertsState="已推广"
  </select>
  
  <update id="updateByExampleSelective" parameterType="map">
    update 2020rg_group9_animalarchive
    <set>
      <if test="record.archivenumber != null">
        archiveNumber = #{record.archivenumber,jdbcType=INTEGER},
      </if>
      <if test="record.eartagnumber != null">
        eartagNumber = #{record.eartagnumber,jdbcType=INTEGER},
      </if>
      <if test="record.initialdate != null">
        initialDate = #{record.initialdate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.initialpeople != null">
        initialPeople = #{record.initialpeople,jdbcType=VARCHAR},
      </if>
      <if test="record.responsiblepeople != null">
        responsiblePeople = #{record.responsiblepeople,jdbcType=VARCHAR},
      </if>
      <if test="record.belongpeople != null">
        belongPeople = #{record.belongpeople,jdbcType=VARCHAR},
      </if>
      <if test="record.archivedescription != null">
        archiveDescription = #{record.archivedescription,jdbcType=VARCHAR},
      </if>
      <if test="record.archivekey != null">
        archiveKey = #{record.archivekey,jdbcType=VARCHAR},
      </if>
      <if test="record.releasestatus != null">
        releaseStatus = #{record.releasestatus,jdbcType=VARCHAR},
      </if>
      <if test="record.releasedate != null">
        releaseDate = #{record.releasedate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.price != null">
        price = #{record.price,jdbcType=DECIMAL},
      </if>
      <if test="record.canapplyauthz != null">
        CanApplyAuthz = #{record.canapplyauthz,jdbcType=VARCHAR},
      </if>
      <if test="record.authzstate != null">
        AuthzState = #{record.authzstate,jdbcType=VARCHAR},
      </if>
      <if test="record.canapplyadverts != null">
        CanApplyAdverts = #{record.canapplyadverts,jdbcType=VARCHAR},
      </if>
      <if test="record.advertsstate != null">
        AdvertsState = #{record.advertsstate,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update 2020rg_group9_animalarchive
    set archiveNumber = #{record.archivenumber,jdbcType=INTEGER},
      eartagNumber = #{record.eartagnumber,jdbcType=INTEGER},
      initialDate = #{record.initialdate,jdbcType=TIMESTAMP},
      initialPeople = #{record.initialpeople,jdbcType=VARCHAR},
      responsiblePeople = #{record.responsiblepeople,jdbcType=VARCHAR},
      belongPeople = #{record.belongpeople,jdbcType=VARCHAR},
      archiveDescription = #{record.archivedescription,jdbcType=VARCHAR},
      archiveKey = #{record.archivekey,jdbcType=VARCHAR},
      releaseStatus = #{record.releasestatus,jdbcType=VARCHAR},
      releaseDate = #{record.releasedate,jdbcType=TIMESTAMP},
      price = #{record.price,jdbcType=DECIMAL},
      CanApplyAuthz = #{record.canapplyauthz,jdbcType=VARCHAR},
      AuthzState = #{record.authzstate,jdbcType=VARCHAR},
      CanApplyAdverts = #{record.canapplyadverts,jdbcType=VARCHAR},
      AdvertsState = #{record.advertsstate,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.crud.bean.AnimalArchive">
    update 2020rg_group9_animalarchive
    <set>
      <if test="eartagnumber != null">
        eartagNumber = #{eartagnumber,jdbcType=INTEGER},
      </if>
      <if test="initialdate != null">
        initialDate = #{initialdate,jdbcType=TIMESTAMP},
      </if>
      <if test="initialpeople != null">
        initialPeople = #{initialpeople,jdbcType=VARCHAR},
      </if>
      <if test="responsiblepeople != null">
        responsiblePeople = #{responsiblepeople,jdbcType=VARCHAR},
      </if>
      <if test="belongpeople != null">
        belongPeople = #{belongpeople,jdbcType=VARCHAR},
      </if>
      <if test="archivedescription != null">
        archiveDescription = #{archivedescription,jdbcType=VARCHAR},
      </if>
      <if test="archivekey != null">
        archiveKey = #{archivekey,jdbcType=VARCHAR},
      </if>
      <if test="releasestatus != null">
        releaseStatus = #{releasestatus,jdbcType=VARCHAR},
      </if>
      <if test="releasedate != null">
        releaseDate = #{releasedate,jdbcType=TIMESTAMP},
      </if>
      <if test="price != null">
        price = #{price,jdbcType=DECIMAL},
      </if>
      <if test="canapplyauthz != null">
        CanApplyAuthz = #{canapplyauthz,jdbcType=VARCHAR},
      </if>
      <if test="authzstate != null">
        AuthzState = #{authzstate,jdbcType=VARCHAR},
      </if>
      <if test="canapplyadverts != null">
        CanApplyAdverts = #{canapplyadverts,jdbcType=VARCHAR},
      </if>
      <if test="advertsstate != null">
        AdvertsState = #{advertsstate,jdbcType=VARCHAR},
      </if>
    </set>
    where archiveNumber = #{archivenumber,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.crud.bean.AnimalArchive">
    update 2020rg_group9_animalarchive
    set eartagNumber = #{eartagnumber,jdbcType=INTEGER},
      initialDate = #{initialdate,jdbcType=TIMESTAMP},
      initialPeople = #{initialpeople,jdbcType=VARCHAR},
      responsiblePeople = #{responsiblepeople,jdbcType=VARCHAR},
      belongPeople = #{belongpeople,jdbcType=VARCHAR},
      archiveDescription = #{archivedescription,jdbcType=VARCHAR},
      archiveKey = #{archivekey,jdbcType=VARCHAR},
      releaseStatus = #{releasestatus,jdbcType=VARCHAR},
      releaseDate = #{releasedate,jdbcType=TIMESTAMP},
      price = #{price,jdbcType=DECIMAL},
      CanApplyAuthz = #{canapplyauthz,jdbcType=VARCHAR},
      AuthzState = #{authzstate,jdbcType=VARCHAR},
      CanApplyAdverts = #{canapplyadverts,jdbcType=VARCHAR},
      AdvertsState = #{advertsstate,jdbcType=VARCHAR}
    where archiveNumber = #{archivenumber,jdbcType=INTEGER}
  </update>
</mapper>